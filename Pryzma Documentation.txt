Pryzma Programming Language Documentation

Introduction:

Pryzma is a simple programming language designed for ease of use and readability.

Syntax:

Variables:

Variables in Pryzma can hold numeric values or strings. Variable names must start with a letter and can contain letters, numbers, and underscores.

a = 10
name = "John"

Lists:

a = [1,2,3,4,5]

print a[0]

append a, "text"

it will append text to list a, you can also do copy that append elements from one list to another:

a = [1,2]

b = [3,4]

copy b,a

print a

output will be [1,2,3,4]

pop a, "text"

it will pop text from list a

you can move objects on a list by using the move instruction like that:

a = [1,2,3,4,5]

move(0, 1, a)

print a

output will be [2, 1, 3, 4, 5]

you can also swap wariables like that:

a = [1,2,3,4,5]

swap(0, 2, a)

print a

output will be [3, 2, 1, 4, 5]

Type conversion:

variable = int(variable)

or

variable = str(1)

to get type of some variable you can do:

a = 1
b = type(a)
print b

it will print int

you can also check if a variable is a number like this:


a = 1

b = isanumber(a)

print b

output will be True


Len:
you also can do len like that:

a = "text"

print len(a)

it will print 4 ,you can also do:

a = [1,2,3,4,5]

print len(a)

it will print 5

index:

a = [1,2,3,4,5]
b = index(a, 3)
print b

output will be 2
index() returns index of value in some list or error if id isn't in the list

Split:

b = "text text2"

print split(b)

it will print list of all works like that:

["text", "text2"]

splitlines() works nearly tes same but it split by lines not by words, there is also splitby(),
that split by some character for example if i have string "textMtext" and i want to split it by the M i can do it like that:

a = "textMtext"
b = splitby("M", a)
print b

output will be a list that will look like that:

["text", "text"]

if you want to split by "," because its not working you will need to do some think like that:

a = "text,text"
f = ","
b = splitby(f, a)
print(b)

Output will be:

['text', 'text']

Arithmetic Operations:

Pryzma supports basic arithmetic operations including addition, subtraction, multiplication, and division.

result = 10 + 5
total = 2 * 3
difference = 8 - 4
quotient = 10 / 2

Input/Output:

Pryzma allows input from the user and output to the console. Concatenation is used to combine strings and variables for output.

input age::"age:"
print "Your age is: " + age

in input age is a variable that input will be assigned to it and "age:" is the prompt, if input will look like that:

input age

then no prompt will be displayed

if there is \n in line it will print new line like in python,you can also do some think like that:

a = "text"

print a[1:-1]

it will print ex because it will remove one character form right and one from left


Flow Control:

Pryzma supports simple flow control using the STOP statement. It terminates the program execution.

stop

Loops:

for i, 1:5, print i

output will be:

1
2
3
4
5

while a, b, print if

while value of a equals value of b value of i will be printed

there is also whilen that execute the action as long as value a doesn't equal value b

incrementing by one:

i = 0
i++
print i
output will be 1 , ++ increments by one

decrementing by one:

i = 1
i--
print i
output will be 0 , -- increments by one

Tkinter for Pryzma:

to enable the use of tkinter from the code you can do some think like that:

tk enable

now you can use basic tkinter functions in Pryzma, for example:

tk window(name_of_the_window)

this creates a window with the given name

tk create_label(name_of_the_label, name_of_the_window, text_to_display)

this creates a label with the given name, parent window, and text to display

tk create_button(name_of_the_button, name_of_the_window, text_to_display, command_to_execute)

this creates a button with the given name, parent window, text to display, and command to execute when clicked

tk get_entry_text(entry_name, variable_name)

this gets the text from the entry with the given name and assigns it th the variable given

tk title(name_of_the_window, text_to_display_as_the_title)

this sets the title of the window to the given text

tk set_entry_text(entry_name, text_to_display)

this sets the text of the entry with the given name to the given text

importing:

use file_path

after import you can use functions from the imported file

if you add ./ before the file path it will look for the given file in the same folder as the file.

Comments:

Comments in Pryzma start with the # symbol and continue to the end of the line.

#This is a comment

If statement:

input variable::"var1:"
input variable2::"var2:"
if variable, variable2, print "true"

if variable one is the same as variable2 it will print true

input variable::"var1:"
input variable2::"var2:"
ifn variable, variable2, print "true"

if variable will not equal variable2 it will print true

input variable::"var1:"
input variable2::"var2:"
ifs variable, variable2, print "true"

if variable will be smaller than variable2 it will print true

input variable::"var1:"
input variable2::"var2:"
ifb variable, variable2, print "true"

if variable will be bigger than variable2 it will print true

Functions:

declare function:

/function_name{command|command2|command3}

function body can have only one instruction

calling functions:

@function_name("text")

string text will be automatically assigned to variable arg1,variables also can be used as arguments like that:



/add{print arg1}

a = "text"

@add(a)

when calling a function at least one argument need to be passed even when it is not going to be use other wise you will get an error,for now calling a function with arguments in an if statment is impossible
to call a function without argument you can do

@add


Loops:

for i, 1:5, print i

it will print numbers from one to five

a=3

for i, a:5, print i

it will print numbers from 3 to 5

while a, b, @func

as long as variable a will equal variable b it will call function func you can use string instead of a variable

Exec function:

exec bash command

can be used like that:

exec echo Hello

Read and write:

content = read(C:\Users\User\Desktop\Untitled-1.txt)

content of file C:\Users\User\Desktop\Untitled-1.txt will be assigned to variable content

write(C:\Users\User\Desktop\Untitled-1.txt,content)

iw will write value of variable content to file C:\Users\User\Desktop\Untitled-1.txt, if file doesn't exist it will create it.

In:

a = [1,2,3]

b = in(a, 2)

print b

output will be True, you can also check if some string appear in list or if some word appear in string

Del:

you can use del to delete a variable like that:

a = "text"

print a

del(a)

print a

it will print text and then it will give error that will  say that variable a doesn't exist


Cli arguments:
by running:

python Pryzma.py file_path d df

two variables will be created and accessible from code, in this example parg0 that will be 'd' and parg1 that will be 'df',
you can pass as many arguments as you wish

Examples:

Example 1: Simple Arithmetic

a = 10
b = 5

sum = a + b
difference = a - b
product = a * b
quotient = a / b

print sum
print difference
print product
print quotient

Example 2: Input and Output

input name

print "Hello, " + name

Running Programs:

To run a Pryzma program, save the code in a text file execute it by lunching the
Pryzma interpreter and writing "file" command and providing a file path, or by lunching it from command line and  providing a file path sorunded  with " like that:

python Pryzma.py "file_path"

License:

Pryzma is open-source software released under the Apache license. See the license.txt file for more details.

Author:

Pryzma was created by Igor Cielniak.

Support:

For questions, bug reports, and feature requests, please contact me igorcielniak.contact@gmail.com.
